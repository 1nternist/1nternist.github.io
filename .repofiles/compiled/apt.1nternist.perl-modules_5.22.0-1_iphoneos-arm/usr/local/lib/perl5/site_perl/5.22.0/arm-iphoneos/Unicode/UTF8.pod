=head1 NAME

Unicode::UTF8 - Decoding and encoding of UTF-8 encoding form

=head1 SYNOPSIS

    use Unicode::UTF8 qw[decode_utf8 encode_utf8];
    
    $string = decode_utf8($octets);
    $octets = encode_utf8($string);

=head1 DESCRIPTION

This module provides functions to encode and decode UTF-8 encoding form as 
specified by Unicode and ISO/IEC 10646:2011.

=head1 FUNCTIONS

=head2 decode_utf8($octets [, $fallback])

Returns an decoded representation of C<$octets> in UTF-8 encoding as a character
string.

Issues a warning using warnings category C<utf8> if C<$octets> contains 
ill-formed UTF-8 sequences or encoded code points which can't be interchanged.

C<$fallback> is a C<CODE> reference which provides a error-handling mechanism, 
allowing customization of error handling. The default error-handling mechanism 
is to replace any ill-formed UTF-8 sequences or encoded code points which can't 
be interchanged with REPLACEMENT CHARACTER (U+FFFD).

    $string = $fallback->($octets, $is_usv);

C<$fallback> is invoked with two arguments, C<$octets> and C<$is_usv>. 
C<$octets> is a sequence of one or more octets containing the maximal 
subpart of the ill-formed subsequence or encoded code point which can't be 
interchanged. C<$is_usv> is a boolean indicating whether or not C<$octets> 
represent a encoded Unicode scalar value. C<$fallback> must return a character 
string consisting of zero or more Unicode characters.

=head2 encode_utf8($string [, $fallback])

Returns an encoded representation of C<$string> in UTF-8 encoding as an octet
string.

Issues a warning using warnings category C<utf8> if C<$string> contains 
code points which can't be interchanged or represented in UTF-8 encoding form.

C<$fallback> is a C<CODE> reference which provides a error-handling mechanism, 
allowing customization of error handling. The default error-handling mechanism 
is to replace any code points which can't be interchanged or represented in 
UTF-8 encoding form with REPLACEMENT CHARACTER (U+FFFD).

    $string = $fallback->($codepoint, $is_usv);

C<$fallback> is invoked with two arguments, C<$codepoint> and C<$is_usv>. 
C<$codepoint> is a unsigned integer containing the code point which can't be
interchanged or represented in UTF-8 encoding form. C<$is_usv> is a boolean 
indicating whether or not C<$codepoint> is a Unicode scalar value. C<$fallback> 
must return a character string consisting of zero or more Unicode characters.

=head1 EXPORTS

None by default. All functions can be exported using the C<:all> tag or individually.

=head1 DIAGNOSTICS

=over 4

=item Can't decode a wide character string

(F) Wide character in octets.

=item Can't decode ill-formed UTF-8 octet sequence <%s> in position %u

(W utf8) Encountered an ill-formed UTF-8 octet sequence. <%s> contains a 
hexadecimal representation of the maximal subpart of the ill-formed subsequence.

=item Can't interchange noncharacter code point U+%.4X at position %u

(W utf8, nonchar) Noncharacters is permanently reserved for internal use and that
should never be interchanged. Noncharacters consist of the values U+nFFFE and
U+nFFFF (where n is from 0 to 10^16) and the values U+FDD0..U+FDEF.

=item Can't represent surrogate code point U+%.4X at position %u in UTF-8 encoding form

(W utf8, surrogate) Surrogate code points are designated only for surrogate code units in the 
UTF-16 character encoding form. Surrogates consist of code points in the range 
U+D800 to U+DFFF.

=item Can't represent super code point \x{%X} at position %u in UTF-8 encoding form

(W utf8, non_unicode) Code points greater than U+10FFFF. Perl's extended codespace.

=item Can't decode ill-formed UTF-X octet sequence <%s> in position %u

(F) Encountered an ill-formed octet sequence in Perl's internal representation 
of wide characters.

=back

Please note that the sub-categories of utf8 warning C<nonchar>, C<surrogate> 
and C<non_unicode> is only available on Perl 5.14 or greater. See L<perllexwarn> 
for available categories and hierarchies.

=head1 COMPARISON

Here is a summary of features for comparison with L<Encode>'s UTF-8 implementation:

=over 4

=item *

simple API which makes use of Perl's standard warning categories.

=item *

recognizes all noncharacters regardless of perl version

=item *

implements Unicode's recommended practice for using U+FFFD

=item *

good diagnostics in warnings messages

=item *

detects and reports inconsistency in perl's internal encoding (UTF-X)

=item *

preserves taintedness of decoded C<$octets> or encoded C<$string>

=item *

better performance ~ 600% - 1200% (JA: 600%, AR: 700%, SV: 900%, EN: 1200%, 
see benchmarks directory in git repository)

=back

=head1 CONFORMANCE

It's the author's believe that this UTF-8 implementation is conformant with 
the Unicode Standard Version 6.0. Any deviations from the Unicode Standard 
is to be considered a bug.

=head1 SEE ALSO

=over 4

=item L<Encode>

=item L<http://www.unicode.org/>

=back

=head1 SUPPORT

=head2 BUGS

Please report any bugs by email to C<bug-unicode-utf8 at rt.cpan.org>, or 
through the web interface at L<http://rt.cpan.org/Public/Dist/Display.html?Name=Unicode-UTF8>. 
You will be automatically notified of any progress on the request by the system.

=head2 SOURCE CODE

This is open source software. The code repository is available for public 
review and contribution under the terms of the license.

L<http://github.com/chansen/p5-unicode-utf8>

    git clone http://github.com/chansen/p5-unicode-utf8

=head1 AUTHOR

Christian Hansen C<chansen@cpan.org>

=head1 COPYRIGHT

Copyright 2011 by Christian Hansen.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

