.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "POD2::JA::Unicode::LineBreak 3"
.TH POD2::JA::Unicode::LineBreak 3 "2014-04-23" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Unicode::LineBreak~[ja] \- UAX #14 Unicode XXXXXXXXX
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    use Unicode::LineBreak;
\&    $lb = Unicode::LineBreak\->new();
\&    $broken = $lb\->break($string);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Unicode::LineBreak XXUnicode \s-1XXXXXX14\s0 [\s-1UAX\s0 #14] \s-1XXXX\s0 Unicode \s-1XXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXX11\s0 [\s-1UAX\s0 #11] \s-1XXXXXX\s0 East_Asian_Width \s-1XXXXXXXXXX\s0
.Sh "\s-1XX\s0"
.IX Subsection "XX"
\&\s-1XXXXXXXXXXXXX\s0
.PP
\&\fB\s-1XXXX\s0\fRXmandatory breakXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&\fB\s-1XXXX\s0\fR\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
[\s-1UAX\s0 #14] \s-1XXXXXXXXXXXX\s0\fB\s-1XXXX\s0\fRXdirect breakXX\fB\s-1XXXX\s0\fRXindirect breakXXXXXX
.PP
\&\fB\s-1XXXXXXXX\s0\fRXalphabetic charactersXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&\fB\s-1XXXXXXXX\s0\fRXideographic charactersXXXXXXXXXXXXXXXXXXXX
[\s-1UAX\s0 #14] \s-1XXXXXXXXXXXXXXXX\s0 \s-1AL\s0 \s-1XXXXXXXXXXXXXXXX\s0 \s-1ID\s0 \s-1XXXXXXX\s0
(\s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0)X
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXX\s0\fB\s-1XX\s0\fR\s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXX\s0\fB\s-1XX\s0\fRXwideXXX\fB\s-1XX\s0\fRXnarrowXXXXXXXXXXXnonspacingXXXXXXXXXXXXX 2 \s-1XX1\s0 \s-1XX0\s0 \s-1XXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.SH "PUBLIC INTERFACE"
.IX Header "PUBLIC INTERFACE"
.Sh "\s-1XXXX\s0"
.IX Subsection "XXXX"
.IP "new ([\s-1KEY\s0 => \s-1VALUE\s0, ...])" 4
.IX Item "new ([KEY => VALUE, ...])"
\&\fI\s-1XXXXXXX\s0\fRX
\&\s-1KEY\s0 => \s-1VALUE\s0 \s-1XXXXXXX\s0 \*(L"\s-1XXXXX\s0\*(R" \s-1XXXX\s0
.IP "break (\s-1STRING\s0)" 4
.IX Item "break (STRING)"
\&\fI\s-1XXXXXXXXXX\s0\fRX
Unicode \s-1XXX\s0 \s-1STRING\s0 \s-1XXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXX\s0
.IP "break_partial (\s-1STRING\s0)" 4
.IX Item "break_partial (STRING)"
\&\fI\s-1XXXXXXXXXX\s0\fRX
\&\fIbreak()\fR \s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXSTRING\s0 \s-1XXX\s0 \f(CW\*(C`undef\*(C'\fR \s-1XXXXX\s0
.IP "config (\s-1KEY\s0)" 4
.IX Item "config (KEY)"
.PD 0
.IP "config (\s-1KEY\s0 => \s-1VALUE\s0, ...)" 4
.IX Item "config (KEY => VALUE, ...)"
.PD
\&\fI\s-1XXXXXXXXXX\s0\fRX
\&\s-1XXXXXXXXXXXXX\s0
\&\s-1KEY\s0 => \s-1VALUE\s0 \s-1XXXXXXX\s0 \*(L"\s-1XXXXX\s0\*(R" \s-1XXXX\s0
.IP "copy" 4
.IX Item "copy"
\&\fI\s-1XXXXXXXXXX\s0\fRX
\&\s-1XXXXXXXXXXXXXXXXXXXX\s0
.Sh "\s-1XXXXX\s0"
.IX Subsection "XXXXX"
.IP "breakingRule (\s-1BEFORESTR\s0, \s-1AFTERSTR\s0)" 4
.IX Item "breakingRule (BEFORESTR, AFTERSTR)"
\&\fI\s-1XXXXXXXXXX\s0\fRX
\&\s-1XXX\s0 \s-1BEFORESTR\s0 X \s-1AFTERSTR\s0 \s-1XXXXXXXXXXXXX\s0
\&\s-1XXXXXXX\s0 \*(L"\s-1XX\s0\*(R" \s-1XXXX\s0
.Sp
\&\fBX\fR:
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\fIXXXXXXXXXXXXXXXXbreak()\fR \s-1XXXXXXXXXXXXXX\s0
.IP "context ([Charset => \s-1CHARSET\s0], [Language => \s-1LANGUAGE\s0])" 4
.IX Item "context ([Charset => CHARSET], [Language => LANGUAGE])"
\&\fI\s-1XX\s0\fRX
\&\s-1XXXXXXXX\s0 \s-1CHARSET\s0 \s-1XXXXXXXX\s0 \s-1LANGUAGE\s0 \s-1XXXXXXXXXX/XXXXXXXXX\s0
.Sh "\s-1XXXXX\s0"
.IX Subsection "XXXXX"
\&\*(L"new\*(R"X\*(L"config\*(R" \s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXX\s0 ([\fBE\fR])XXXXXXXXXX ([\fBG\fR])
(Unicode::GCString~[ja] \s-1XXX\s0)XXXXXX ([\fBL\fR])
\&\s-1XXXXXXXXXXX\s0
.ie n .IP "BreakIndent => ""YES""\fR | \f(CW""NO""" 4
.el .IP "BreakIndent => \f(CW``YES''\fR | \f(CW``NO''\fR" 4
.IX Item "BreakIndent => ""YES"" | ""NO"""
[\fBL\fR]
\&\s-1XXX\s0 \s-1SPACE\s0 \s-1XXX\s0 (\s-1XXXXX\s0) \s-1XXXXXXXXXXXX\s0
[\s-1UAX\s0 #14] X \s-1SPACE\s0 \s-1XXXXXXXXXXXXXXXXX\s0
\&\s-1XXXX\s0 \f(CW"YES"\fRX
.Sp
\&\fBX\fR:
\&\s-1XXXXXXXXXXXX\s0 1.011 \s-1XXXXXXX\s0
.IP "CharMax => \s-1NUMBER\s0" 4
.IX Item "CharMax => NUMBER"
[\fBL\fR]
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXX\s0 \f(CW998\fRX
\&\f(CW0\fR \s-1XXXXXXX\s0
.IP "ColMin => \s-1NUMBER\s0" 4
.IX Item "ColMin => NUMBER"
[\fBL\fR]
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXX\s0 \f(CW0\fRX
.IP "ColMax => \s-1NUMBER\s0" 4
.IX Item "ColMax => NUMBER"
[\fBL\fR]
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXX\s0 \f(CW76\fRX
.PP
\&\*(L"Urgent\*(R" \s-1XXXXXXXX\s0 \*(L"\s-1XXXXXXXXXXX\s0\*(R" \s-1XXXX\s0
.ie n .IP "ComplexBreaking => ""YES""\fR | \f(CW""NO""" 4
.el .IP "ComplexBreaking => \f(CW``YES''\fR | \f(CW``NO''\fR" 4
.IX Item "ComplexBreaking => ""YES"" | ""NO"""
[\fBL\fR]
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0 \f(CW"YES"\fRX
.IP "Context => \s-1CONTEXT\s0" 4
.IX Item "Context => CONTEXT"
[\fBE\fR][\fBL\fR]
\&\s-1XX/XXXXXXXXXXX\s0
\&\s-1XXXXXXXX\s0 \f(CW"EASTASIAN"\fR X \f(CW"NONEASTASIAN"\fRX
\&\s-1XXXXXX\s0 \f(CW"NONEASTASIAN"\fRX
.Sp
\&\f(CW"EASTASIAN"\fR XXXXXEast_Asian_Width \s-1XXXXX\s0 (A)
\&\s-1XXXXXXXXXXXXXXXXXXXXX\s0 \s-1AI\s0 \s-1XXXXXXXXX\s0 (\s-1ID\s0)
\&\s-1XXXXX\s0
.Sp
\&\f(CW"NONEASTASIAN"\fR XXXXXEast_Asian_Width \s-1XXXXX\s0 (A)
\&\s-1XXXXXXXXXXXXXXXXXXXXX\s0 \s-1AI\s0 \s-1XXXXXXXXX\s0 (\s-1AL\s0)
\&\s-1XXXXX\s0
.ie n .IP "EAWidth => ""[""\fR \s-1ORD\s0 \f(CW""=>""\fR \s-1PROPERTY\s0 \f(CW""]""" 4
.el .IP "EAWidth => \f(CW[\fR \s-1ORD\s0 \f(CW=>\fR \s-1PROPERTY\s0 \f(CW]\fR" 4
.IX Item "EAWidth => [ ORD => PROPERTY ]"
.PD 0
.ie n .IP "EAWidth => ""undef""" 4
.el .IP "EAWidth => \f(CWundef\fR" 4
.IX Item "EAWidth => undef"
.PD
[\fBE\fR]
\&\s-1XXXXXX\s0 East_Asian_Width \s-1XXXXXXXXX\s0
\&\s-1ORD\s0 \s-1XXXX\s0 \s-1UCS\s0 \s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1PROPERTY\s0 X East_Asian_Width \s-1XXXXXXXXXXXX\s0 (\*(L"\s-1XX\s0\*(R" \s-1XXX\s0)X
\&\s-1XXXXXXXXXXXXXXXXX\s0
\&\f(CW\*(C`undef\*(C'\fR \s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0
.Sp
XXXXXXEast_Asian_width \s-1XXXXXXXXXXX\s0
\&\*(L"\s-1XXXXXXXXX\s0\*(R" \s-1XXXX\s0
.IP "Format => \s-1METHOD\s0" 4
.IX Item "Format => METHOD"
[\fBL\fR]
\&\s-1XXXXXXXXXXXXXXXXXX\s0
.RS 4
.ie n .IP """SIMPLE""" 4
.el .IP "\f(CW``SIMPLE''\fR" 4
.IX Item """SIMPLE"""
\&\s-1XXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXX\s0
.ie n .IP """NEWLINE""" 4
.el .IP "\f(CW``NEWLINE''\fR" 4
.IX Item """NEWLINE"""
\&\*(L"Newline\*(R" \s-1XXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
.ie n .IP """TRIM""" 4
.el .IP "\f(CW``TRIM''\fR" 4
.IX Item """TRIM"""
\&\s-1XXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXX\s0
.ie n .IP """undef""" 4
.el .IP "\f(CWundef\fR" 4
.IX Item "undef"
\&\s-1XXXXXX\s0 (\s-1XXXXXX\s0)X
.IP "\s-1XXXXXXXXXX\s0" 4
.IX Item "XXXXXXXXXX"
\&\*(L"\s-1XXXX\s0\*(R" \s-1XXXX\s0
.RE
.RS 4
.RE
.ie n .IP "HangulAsAL => ""YES""\fR | \f(CW""NO""" 4
.el .IP "HangulAsAL => \f(CW``YES''\fR | \f(CW``NO''\fR" 4
.IX Item "HangulAsAL => ""YES"" | ""NO"""
[\fBL\fR]
XXXXXXXXXXXXXXXXXconjoining jamoXXXXXXXXXX (\s-1AL\s0) \s-1XXXX\s0
\&\s-1XXXX\s0 \f(CW"NO"\fRX
.ie n .IP "LBClass => ""[""\fR \s-1ORD\s0 \f(CW""=>""\fR \s-1CLASS\s0 \f(CW""]""" 4
.el .IP "LBClass => \f(CW[\fR \s-1ORD\s0 \f(CW=>\fR \s-1CLASS\s0 \f(CW]\fR" 4
.IX Item "LBClass => [ ORD => CLASS ]"
.PD 0
.ie n .IP "LBClass => ""undef""" 4
.el .IP "LBClass => \f(CWundef\fR" 4
.IX Item "LBClass => undef"
.PD
[\fBG\fR][\fBL\fR]
\&\s-1XXXXXXXXXXX\s0 (\s-1XX\s0) \s-1XXXXXXX\s0
\&\s-1ORD\s0 \s-1XXXX\s0 \s-1UCS\s0 \s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1CLASS\s0 \s-1XXXXXXXXXXXX\s0 (\*(L"\s-1XX\s0\*(R" \s-1XXX\s0)X
\&\s-1XXXXXXXXXXXXXXXXX\s0
\&\f(CW\*(C`undef\*(C'\fR \s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0
.Sp
\&\s-1XXXXXXXXXXXXXXXXXXXX\s0
\&\*(L"\s-1XXXXXXXXX\s0\*(R" \s-1XXXX\s0
.ie n .IP "LegacyCM => ""YES""\fR | \f(CW""NO""" 4
.el .IP "LegacyCM => \f(CW``YES''\fR | \f(CW``NO''\fR" 4
.IX Item "LegacyCM => ""YES"" | ""NO"""
[\fBG\fR][\fBL\fR]
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0 (\s-1ID\s0) \s-1XXXX\s0
Unicode 5.0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXX\s0 \f(CW"YES"\fRX
.IP "Newline => \s-1STRING\s0" 4
.IX Item "Newline => STRING"
[\fBL\fR]
\&\s-1XXXXXXXXX\s0 Unicode \s-1XXXX\s0
\&\s-1XXXX\s0 \f(CW"\en"\fRX
.IP "Prep => \s-1METHOD\s0" 4
.IX Item "Prep => METHOD"
[\fBL\fR]
\&\s-1XXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXX\s0
\&\s-1METHOD\s0 \s-1XXXXXXXXXXXXXX\s0
.RS 4
.ie n .IP """NONBREAKURI""" 4
.el .IP "\f(CW``NONBREAKURI''\fR" 4
.IX Item """NONBREAKURI"""
\&\s-1URI\s0 \s-1XXXXXXX\s0
.ie n .IP """BREAKURI""" 4
.el .IP "\f(CW``BREAKURI''\fR" 4
.IX Item """BREAKURI"""
\&\s-1URI\s0 \s-1XXXXXXXXXXXXXXXXX\s0
\&\s-1XXXX\s0 [\s-1CMOS\s0] X 6.17 \s-1XX\s0 17.11 \s-1XXXXX\s0
.ie n .IP """[""\fR \s-1REGEX\s0, \s-1SUBREF\s0 \f(CW""]""" 4
.el .IP "\f(CW[\fR \s-1REGEX\s0, \s-1SUBREF\s0 \f(CW]\fR" 4
.IX Item "[ REGEX, SUBREF ]"
\&\s-1XXXX\s0 \s-1REGEX\s0 \s-1XXXXXXXXXXXSUBREF\s0 \s-1XXXXXXXXXXXXXXXXXX\s0
\&\s-1XXX\s0 \*(L"\s-1XXXXXXXXXXX\s0\*(R" \s-1XXXX\s0
.ie n .IP """undef""" 4
.el .IP "\f(CWundef\fR" 4
.IX Item "undef"
\&\s-1XXXXXXXXXXXXXXXXXXXX\s0
.RE
.RS 4
.RE
.IP "Sizing => \s-1METHOD\s0" 4
.IX Item "Sizing => METHOD"
[\fBL\fR]
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXX\s0
.RS 4
.ie n .IP """UAX11""" 4
.el .IP "\f(CW``UAX11''\fR" 4
.IX Item """UAX11"""
\&\s-1XXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.ie n .IP """undef""" 4
.el .IP "\f(CWundef\fR" 4
.IX Item "undef"
\&\s-1XXXXXXXXXXXXXXX\s0 (Unicode::GCString \s-1XX\s0) \s-1XXXXXX\s0
.IP "\s-1XXXXXXXXXX\s0" 4
.IX Item "XXXXXXXXXX"
\&\*(L"\s-1XXXXXXX\s0\*(R" \s-1XXXX\s0
.RE
.RS 4
.Sp
\&\*(L"ColMax\*(R"X\*(L"ColMin\*(R"X\*(L"EAWidth\*(R" \s-1XXXXXXXXX\s0
.RE
.IP "Urgent => \s-1METHOD\s0" 4
.IX Item "Urgent => METHOD"
[\fBL\fR]
\&\s-1XXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXX\s0
.RS 4
.ie n .IP """CROAK""" 4
.el .IP "\f(CW``CROAK''\fR" 4
.IX Item """CROAK"""
\&\s-1XXXXXXXXXXXXXXXX\s0
.ie n .IP """FORCE""" 4
.el .IP "\f(CW``FORCE''\fR" 4
.IX Item """FORCE"""
\&\s-1XXXXXXXXXXXXXXXXX\s0
.ie n .IP """undef""" 4
.el .IP "\f(CWundef\fR" 4
.IX Item "undef"
\&\s-1XXXXXX\s0
\&\s-1XXXXXXXXXXXXXX\s0
.IP "\s-1XXXXXXXXXX\s0" 4
.IX Item "XXXXXXXXXX"
\&\*(L"\s-1XXXXXXXXXXX\s0\*(R" \s-1XXXX\s0
.RE
.RS 4
.RE
.ie n .IP "ViramaAsJoiner => ""YES""\fR | \f(CW""NO""" 4
.el .IP "ViramaAsJoiner => \f(CW``YES''\fR | \f(CW``NO''\fR" 4
.IX Item "ViramaAsJoiner => ""YES"" | ""NO"""
[\fBG\fR]
\&\s-1XXXXXXX\s0 (\s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0)
\&\s-1XXXXXXXXXXXXXXX\s0
\&\s-1XXXX\s0 \f(CW"YES"\fRX
\&\fBX\fR:
\&\s-1XXXXXXXXXXXX\s0 2011.001_29 \s-1XXXXXXX\s0
\&\s-1XXXXXXXXX\s0 \f(CW"NO"\fR \s-1XXXXXXXX\s0
XXXX[\s-1UAX\s0 #29] \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.Sh "\s-1XX\s0"
.IX Subsection "XX"
.ie n .IP """EA_Na""\fR, \f(CW""EA_N""\fR, \f(CW""EA_A""\fR, \f(CW""EA_W""\fR, \f(CW""EA_H""\fR, \f(CW""EA_F""" 4
.el .IP "\f(CWEA_Na\fR, \f(CWEA_N\fR, \f(CWEA_A\fR, \f(CWEA_W\fR, \f(CWEA_H\fR, \f(CWEA_F\fR" 4
.IX Item "EA_Na, EA_N, EA_A, EA_W, EA_H, EA_F"
[\s-1UAX\s0 #11] \s-1XXXXXX\s0 6 \s-1XX\s0 East_Asian_Width \s-1XXXX\s0
X (Na)XXX (N)XXX (A)XX (W)XXX (H)XXX (F)X
.ie n .IP """EA_Z""" 4
.el .IP "\f(CWEA_Z\fR" 4
.IX Item "EA_Z"
\&\s-1XXXXXXXXXX\s0 East_Asian_Width \s-1XXXXX\s0
.Sp
\&\fBX\fR:
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
[\s-1UAX\s0 #11] \s-1XXXXXXXX\s0
.ie n .IP """LB_BK""\fR, \f(CW""LB_CR""\fR, \f(CW""LB_LF""\fR, \f(CW""LB_NL""\fR, \f(CW""LB_SP""\fR, \f(CW""LB_OP""\fR, \f(CW""LB_CL""\fR, \f(CW""LB_CP""\fR, \f(CW""LB_QU""\fR, \f(CW""LB_GL""\fR, \f(CW""LB_NS""\fR, \f(CW""LB_EX""\fR, \f(CW""LB_SY""\fR, \f(CW""LB_IS""\fR, \f(CW""LB_PR""\fR, \f(CW""LB_PO""\fR, \f(CW""LB_NU""\fR, \f(CW""LB_AL""\fR, \f(CW""LB_HL""\fR, \f(CW""LB_ID""\fR, \f(CW""LB_IN""\fR, \f(CW""LB_HY""\fR, \f(CW""LB_BA""\fR, \f(CW""LB_BB""\fR, \f(CW""LB_B2""\fR, \f(CW""LB_CB""\fR, \f(CW""LB_ZW""\fR, \f(CW""LB_CM""\fR, \f(CW""LB_WJ""\fR, \f(CW""LB_H2""\fR, \f(CW""LB_H3""\fR, \f(CW""LB_JL""\fR, \f(CW""LB_JV""\fR, \f(CW""LB_JT""\fR, \f(CW""LB_SG""\fR, \f(CW""LB_AI""\fR, \f(CW""LB_CJ""\fR, \f(CW""LB_SA""\fR, \f(CW""LB_XX""\fR, \f(CW""LB_RI""" 4
.el .IP "\f(CWLB_BK\fR, \f(CWLB_CR\fR, \f(CWLB_LF\fR, \f(CWLB_NL\fR, \f(CWLB_SP\fR, \f(CWLB_OP\fR, \f(CWLB_CL\fR, \f(CWLB_CP\fR, \f(CWLB_QU\fR, \f(CWLB_GL\fR, \f(CWLB_NS\fR, \f(CWLB_EX\fR, \f(CWLB_SY\fR, \f(CWLB_IS\fR, \f(CWLB_PR\fR, \f(CWLB_PO\fR, \f(CWLB_NU\fR, \f(CWLB_AL\fR, \f(CWLB_HL\fR, \f(CWLB_ID\fR, \f(CWLB_IN\fR, \f(CWLB_HY\fR, \f(CWLB_BA\fR, \f(CWLB_BB\fR, \f(CWLB_B2\fR, \f(CWLB_CB\fR, \f(CWLB_ZW\fR, \f(CWLB_CM\fR, \f(CWLB_WJ\fR, \f(CWLB_H2\fR, \f(CWLB_H3\fR, \f(CWLB_JL\fR, \f(CWLB_JV\fR, \f(CWLB_JT\fR, \f(CWLB_SG\fR, \f(CWLB_AI\fR, \f(CWLB_CJ\fR, \f(CWLB_SA\fR, \f(CWLB_XX\fR, \f(CWLB_RI\fR" 4
.IX Item "LB_BK, LB_CR, LB_LF, LB_NL, LB_SP, LB_OP, LB_CL, LB_CP, LB_QU, LB_GL, LB_NS, LB_EX, LB_SY, LB_IS, LB_PR, LB_PO, LB_NU, LB_AL, LB_HL, LB_ID, LB_IN, LB_HY, LB_BA, LB_BB, LB_B2, LB_CB, LB_ZW, LB_CM, LB_WJ, LB_H2, LB_H3, LB_JL, LB_JV, LB_JT, LB_SG, LB_AI, LB_CJ, LB_SA, LB_XX, LB_RI"
[\s-1UAX\s0 #14] \s-1XXXXXX\s0 40 \s-1XXXXXXX\s0 (\s-1XX\s0)X
.Sp
\&\fBX\fR:
\&\s-1XXX\s0 \s-1CP\s0 XUnicode 5.2.0XXXXXXXX
\&\s-1XXX\s0 \s-1HL\s0 X \s-1CJ\s0 XUnicode 6.1.0XXXXXXXX
\&\s-1XXX\s0 \s-1RI\s0 X Unicode 6.2.0XXXXXXXX
.ie n .IP """MANDATORY""\fR, \f(CW""DIRECT""\fR, \f(CW""INDIRECT""\fR, \f(CW""PROHIBITED""" 4
.el .IP "\f(CWMANDATORY\fR, \f(CWDIRECT\fR, \f(CWINDIRECT\fR, \f(CWPROHIBITED\fR" 4
.IX Item "MANDATORY, DIRECT, INDIRECT, PROHIBITED"
\&\s-1XXXXXXXX\s0 4 \s-1XXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.ie n .IP """Unicode::LineBreak::SouthEastAsian::supported""" 4
.el .IP "\f(CWUnicode::LineBreak::SouthEastAsian::supported\fR" 4
.IX Item "Unicode::LineBreak::SouthEastAsian::supported"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXX\s0 \f(CW\*(C`undef\*(C'\fRX
.Sp
\&\fBX\fR: \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.ie n .IP """UNICODE_VERSION""" 4
.el .IP "\f(CWUNICODE_VERSION\fR" 4
.IX Item "UNICODE_VERSION"
\&\s-1XXXXXXXXXXXX\s0 Unicode \s-1XXXXXXXXXXX\s0
.SH "CUSTOMIZATION"
.IX Header "CUSTOMIZATION"
.Sh "\s-1XXXX\s0"
.IX Subsection "XXXX"
\&\*(L"Format\*(R" \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 3 \s-1XXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $XXX = &XXXXXX(SELF, EVENT, STR);
.Ve
.PP
\&\s-1SELF\s0 X Unicode::LineBreak \s-1XXXXXXXEVENT\s0 \s-1XXXXXXXXXXXXXXXXXXXXXSTR\s0 \s-1XXXXXXXXXXXX\s0 Unicode \s-1XXXXXXX\s0
.PP
.Vb 10
\&    EVENT |XXXXX           |STR
\&    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&    "sot" |XXXXXX         |XXXXXXX
\&    "sop" |XXXXXX         |XXXXXX
\&    "sol" |XXXXXX         |XXXXXXX
\&    ""    |XXXXX           |XXX (XXXXXXXXXX)
\&    "eol" |XXXX             |XXXXXXXXXXX
\&    "eop" |XXXX             |XXXXXXXXXXX
\&    "eot" |XXXXXX         |XXXXXXXXXXX (XXX)
\&    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.Ve
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0\f(CW\*(C`undef\*(C'\fR \s-1XXXXXXX\s0
\&\s-1XXX\s0\f(CW"sot"\fRX\f(CW"sop"\fRX\f(CW"sol"\fR \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\fB\s-1XX\s0\fR:
\&\s-1XXXXXXXXXXXXXXXXXXXXXXX\s0
Unicode::GCString~[ja] \s-1XXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 8
\&    sub fmt {
\&        if ($_[1] =~ /^eo/) {
\&            return "\en";
\&        }
\&        return undef;
\&    }
\&    my $lb = Unicode::LineBreak\->new(Format => \e&fmt);
\&    $output = $lb\->break($text);
.Ve
.Sh "\s-1XXXXXXXXXXX\s0"
.IX Subsection "XXXXXXXXXXX"
\&\s-1XXXXXXXXXXXXX\s0 CharMaxXColMaxXColMin \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0\fB\s-1XXXX\s0\fR\s-1XXXXXXX\s0
\&\*(L"Urgent\*(R" \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 2 \s-1XXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    @XXX = &XXXXXX(SELF, STR);
.Ve
.PP
\&\s-1SELF\s0 X Unicode::LineBreak \s-1XXXXXXXSTR\s0 \s-1XXXXXX\s0 Unicode \s-1XXXX\s0
.PP
\&\s-1XXXXXXXXXXX\s0 \s-1STR\s0 \s-1XXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\fB\s-1XX\s0\fR:
\&\s-1XXXXXXXXXXXXXXXXXXXXXXX\s0
Unicode::GCString~[ja] \s-1XXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXX\s0 (\s-1XXXXXXX\s0) \s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 5
\&    sub hyphenize {
\&        return map {$_ =~ s/yl$/yl\-/; $_} split /(\ew+?yl(?=\ew))/, $_[1];
\&    }
\&    my $lb = Unicode::LineBreak\->new(Urgent => \e&hyphenize);
\&    $output = $lb\->break("Methionylthreonylthreonylglutaminylarginyl...");
.Ve
.PP
\&\*(L"Prep\*(R" \s-1XXXXXX\s0 [\s-1REGEX\s0, \s-1SUBREF\s0] \s-1XXXXXXXXXXXXXXXXXXXX\s0 2 \s-1XXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    @XXX = &XXXXXX(SELF, STR);
.Ve
.PP
\&\s-1SELF\s0 X Unicode::LineBreak \s-1XXXXXXXSTR\s0 X \s-1REGEX\s0 \s-1XXXXXXXXXXX\s0 Unicode \s-1XXXX\s0
.PP
\&\s-1XXXXXXXXXXX\s0 \s-1STR\s0 \s-1XXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXHTTP\s0 \s-1URL\s0 X [\s-1CMOS\s0] \s-1XXXXXXXXXXXX\s0
.PP
.Vb 10
\&    my $url = qr{http://[\ex21\-\ex7E]+}i;
\&    sub breakurl {
\&        my $self = shift;
\&        my $str = shift;
\&        return split m{(?<=[/]) (?=[^/]) |
\&                       (?<=[^\-.]) (?=[\-~.,_?\e#%=&]) |
\&                       (?<=[=&]) (?=.)}x, $str;
\&    }
\&    my $lb = Unicode::LineBreak\->new(Prep => [$url, \e&breakurl]);
\&    $output = $lb\->break($string);
.Ve
.PP
\fI\s-1XXXXX\s0\fR
.IX Subsection "XXXXX"
.PP
Unicode::LineBreak \s-1XXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 4
\&    sub paraformat {
\&        my $self = shift;
\&        my $action = shift;
\&        my $str = shift;
\&        
\&        if ($action eq \*(Aqsot\*(Aq or $action eq \*(Aqsop\*(Aq) {
\&            $self\->{\*(Aqline\*(Aq} = \*(Aq\*(Aq;
\&        } elsif ($action eq \*(Aq\*(Aq) {
\&            $self\->{\*(Aqline\*(Aq} = $str;
\&        } elsif ($action eq \*(Aqeol\*(Aq) {
\&            return "\en";
\&        } elsif ($action eq \*(Aqeop\*(Aq) {
\&            if (length $self\->{\*(Aqline\*(Aq}) {
\&                return "\en\en";
\&            } else {
\&                return "\en";
\&            }
\&        } elsif ($action eq \*(Aqeot\*(Aq) {
\&            return "\en";
\&        }
\&        return undef;
\&    }
\&    my $lb = Unicode::LineBreak\->new(Format => \e&paraformat);
\&    $output = $lb\->break($string);
.Ve
.Sh "\s-1XXXXXXX\s0"
.IX Subsection "XXXXXXX"
\&\*(L"Sizing\*(R" \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 5 \s-1XXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $XX = &XXXXXX(SELF, LEN, PRE, SPC, STR);
.Ve
.PP
\&\s-1SELF\s0 X Unicode::LineBreak \s-1XXXXXXXLEN\s0 \s-1XXXXXXXXXXXXPRE\s0 \s-1XXXXX\s0 Unicode \s-1XXXXSPC\s0 \s-1XXXXXXXXXXXSTR\s0 \s-1XXXXX\s0 Unicode \s-1XXXX\s0
.PP
\&\s-1XXXXXXX\s0 \f(CW\*(C`PRE.SPC.STR\*(C'\fR \s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0\*(L"ColMin\*(R" \s-1XXXXXXXX\s0 \*(L"ColMax\*(R" \s-1XXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\fB\s-1XX\s0\fR:
\&\s-1XXXXXXXXXXXXXXXXXXXXXXX\s0
Unicode::GCString~[ja] \s-1XXX\s0
.PP
\&\s-1XXXXXXXXXXXXX\s0 8 \s-1XXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 2
\&    sub tabbedsizing {
\&        my ($self, $cols, $pre, $spc, $str) = @_;
\&     
\&        my $spcstr = $spc.$str;
\&        while ($spcstr\->lbc == LB_SP) {
\&            my $c = $spcstr\->item(0);
\&            if ($c eq "\et") {
\&                $cols += 8 \- $cols % 8;
\&            } else {
\&                $cols += $c\->columns;
\&            }
\&            $spcstr = $spcstr\->substr(1);
\&        }
\&        $cols += $spcstr\->columns;
\&        return $cols;
\&    };
\&    my $lb = Unicode::LineBreak\->new(LBClass => [ord("\et") => LB_SP],
\&                                     Sizing => \e&tabbedsizing);
\&    $output = $lb\->break($string);
.Ve
.Sh "\s-1XXXXXXXXX\s0"
.IX Subsection "XXXXXXXXX"
\&\*(L"LBClass\*(R" \s-1XXXXXXXX\s0 \*(L"EAWidth\*(R" \s-1XXXXXXXXXXXXXXXXX\s0 (\s-1XX\s0) X East_Asian_Width \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\fI\s-1XXXXX\s0\fR
.IX Subsection "XXXXX"
.PP
\s-1XXXXXXXXXXX\s0
.IX Subsection "XXXXXXXXXXX"
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 (\s-1NS\s0 \s-1XXX\s0 \s-1CJ\s0) \s-1XXXX\s0
\&\s-1XXXXX\s0 LBClass \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 (\s-1ID\s0) \s-1XXXXX\s0
.ie n .IP """KANA_NONSTARTERS() => LB_ID""" 4
.el .IP "\f(CWKANA_NONSTARTERS() => LB_ID\fR" 4
.IX Item "KANA_NONSTARTERS() => LB_ID"
\&\s-1XXXXXXXXX\s0
.ie n .IP """IDEOGRAPHIC_ITERATION_MARKS() => LB_ID""" 4
.el .IP "\f(CWIDEOGRAPHIC_ITERATION_MARKS() => LB_ID\fR" 4
.IX Item "IDEOGRAPHIC_ITERATION_MARKS() => LB_ID"
\&\s-1XXXXXXXXXXXXX\s0
U+3005 \s-1XXXXXXU+303B\s0 \s-1XXXXXU+309D\s0 \s-1XXXXXXXXXU+309E\s0 \s-1XXXXXXXX\s0 (\s-1XX\s0)XU+30FD \s-1XXXXXXXXXU+30FE\s0 \s-1XXXXXXXX\s0 (\s-1XX\s0)X
.Sp
\&\s-1XXXXXXXXXXXXXX\s0
.ie n .IP """KANA_SMALL_LETTERS() => LB_ID""" 4
.el .IP "\f(CWKANA_SMALL_LETTERS() => LB_ID\fR" 4
.IX Item "KANA_SMALL_LETTERS() => LB_ID"
.PD 0
.ie n .IP """KANA_PROLONGED_SOUND_MARKS() => LB_ID""" 4
.el .IP "\f(CWKANA_PROLONGED_SOUND_MARKS() => LB_ID\fR" 4
.IX Item "KANA_PROLONGED_SOUND_MARKS() => LB_ID"
.PD
\&\s-1XXXXXX\s0
\&\s-1XXXXXX\s0 U+3041 X, U+3043 X, U+3045 X, U+3047 X, U+3049 X, U+3063 X, U+3083 X, U+3085 X, U+3087 X, U+308E X, U+3095 X, U+3096 \s-1XX\s0
\&\s-1XXXXXX\s0 U+30A1 X, U+30A3 X, U+30A5 X, U+30A7 X, U+30A9 X, U+30C3 X, U+30E3 X, U+30E5 X, U+30E7 X, U+30EE X, U+30F5 X, U+30F6 \s-1XX\s0
\&\s-1XXXXXXX\s0 U+31F0 X \- U+31FF \s-1XX\s0
\&\s-1XXXXXX\s0 (\s-1XXXX\s0) U+FF67 X \- U+FF6F \s-1XX\s0
.Sp
\&\s-1XXXXX\s0
U+30FC \s-1XXXXXU+FF70\s0 \s-1XXXX\s0 (\s-1XXXX\s0)X
.Sp
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX[\s-1JIS\s0 X 4051] 6.1.1X[\s-1JLREQ\s0] 3.1.7 X [\s-1UAX14\s0] \s-1XXXX\s0
.Sp
\&\s-1XXU+3095\s0 X, U+3096 X, U+30F5 X, U+30F6 X \s-1XXXXXXXXXXXX\s0
.ie n .IP """MASU_MARK() => LB_ID""" 4
.el .IP "\f(CWMASU_MARK() => LB_ID\fR" 4
.IX Item "MASU_MARK() => LB_ID"
U+303C \s-1XXXXX\s0
.Sp
\&\s-1XXXXXXXXXXXXXXXXX\s0 \f(CW"XX"\fR X \f(CW"XX"\fR \s-1XXXXXXXXXXXX\s0
.Sp
\&\s-1XXXXXXX\s0 [\s-1UAX\s0 #14] \s-1XXXXXXXX\s0 (\s-1NS\s0) XXXXXXXX[\s-1JIS\s0 X 4051] X [\s-1JLREQ\s0] \s-1XXXXXXX\s0 (13) X cl\-19 (\s-1ID\s0 \s-1XXX\s0) \s-1XXXXXXX\s0
.PP
\s-1XXXXXX\s0
.IX Subsection "XXXXXX"
.PP
\&\s-1XXXXXXXXXXXXXXXXXX\s0 (\s-1QU\s0) \s-1XXXX\s0
.ie n .IP """BACKWARD_QUOTES() => LB_OP, FORWARD_QUOTES() => LB_CL""" 4
.el .IP "\f(CWBACKWARD_QUOTES() => LB_OP, FORWARD_QUOTES() => LB_CL\fR" 4
.IX Item "BACKWARD_QUOTES() => LB_OP, FORWARD_QUOTES() => LB_CL"
\&\s-1XXXX\s0 (\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXX\s0) \s-1XXXXXXXX\s0 9 \s-1XXXXXXXXXXX\s0
(X X) \s-1XXXXXXX\s0 9 \s-1XXXXXXX\s0
(X X) \s-1XXXXX\s0
.ie n .IP """FORWARD_QUOTES() => LB_OP, BACKWARD_QUOTES() => LB_CL""" 4
.el .IP "\f(CWFORWARD_QUOTES() => LB_OP, BACKWARD_QUOTES() => LB_CL\fR" 4
.IX Item "FORWARD_QUOTES() => LB_OP, BACKWARD_QUOTES() => LB_CL"
\&\s-1XXXXX\s0 (\s-1XXXXXXXXXXXXXXXX\s0) \s-1XXX9\s0 \s-1XXXXXXX\s0
(X X) \s-1XXXXXXX9\s0 \s-1XXXXXXXXXXX\s0
(X X) \s-1XXXXXXXXXX\s0
.ie n .IP """BACKWARD_GUILLEMETS() => LB_OP, FORWARD_GUILLEMETS() => LB_CL""" 4
.el .IP "\f(CWBACKWARD_GUILLEMETS() => LB_OP, FORWARD_GUILLEMETS() => LB_CL\fR" 4
.IX Item "BACKWARD_GUILLEMETS() => LB_OP, FORWARD_GUILLEMETS() => LB_CL"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
(X X) \s-1XXXXXXXXXXXXXX\s0
(X X) \s-1XXXXXXXXXX\s0
.ie n .IP """FORWARD_GUILLEMETS() => LB_OP, BACKWARD_GUILLEMETS() => LB_CL""" 4
.el .IP "\f(CWFORWARD_GUILLEMETS() => LB_OP, BACKWARD_GUILLEMETS() => LB_CL\fR" 4
.IX Item "FORWARD_GUILLEMETS() => LB_OP, BACKWARD_GUILLEMETS() => LB_CL"
\&\s-1XXXXXXXXXXXXXXXXXXXXX\s0 (X X)
\&\s-1XXXXXXXXXXXXXX\s0 (X X) \s-1XXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX9\s0 \s-1XXXXXXXX\s0
\&\s-1XXXXXXX\s0 (X X X X)
\&\s-1XXXXXXXXXXXXXXXXX\s0
.PP
\s-1XXXX\s0
.IX Subsection "XXXX"
.ie n .IP """IDEOGRAPHIC_SPACE() => LB_BA""" 4
.el .IP "\f(CWIDEOGRAPHIC_SPACE() => LB_BA\fR" 4
.IX Item "IDEOGRAPHIC_SPACE() => LB_BA"
U+3000 \s-1XXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXX\s0
.ie n .IP """IDEOGRAPHIC_SPACE() => LB_ID""" 4
.el .IP "\f(CWIDEOGRAPHIC_SPACE() => LB_ID\fR" 4
.IX Item "IDEOGRAPHIC_SPACE() => LB_ID"
\&\s-1XXXXXXXXXXXXXXXX\s0
Unicode 6.2XXXXXXXXXXXXXXXX
.ie n .IP """IDEOGRAPHIC_SPACE() => LB_SP""" 4
.el .IP "\f(CWIDEOGRAPHIC_SPACE() => LB_SP\fR" 4
.IX Item "IDEOGRAPHIC_SPACE() => LB_SP"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\fIEast_Asian_Width \s-1XX\s0\fR
.IX Subsection "East_Asian_Width XX"
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 (A) X East_Asian_Width \s-1XXXXXXXXXXXXXXXXXXXXXX\s0 \f(CW"EASTASIAN"\fR \s-1XXXXXXXXXXXXX\s0
\&\f(CW\*(C`EAWidth => [ AMBIGUOUS_\*(C'\fR*\f(CW\*(C`() => EA_N ]\*(C'\fR \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.ie n .IP """AMBIGUOUS_ALPHABETICS() => EA_N""" 4
.el .IP "\f(CWAMBIGUOUS_ALPHABETICS() => EA_N\fR" 4
.IX Item "AMBIGUOUS_ALPHABETICS() => EA_N"
\&\s-1XXXXXXXXX\s0 East_Asian_Width \s-1XX\s0 N (\s-1XX\s0) \s-1XXXXXXX\s0
.ie n .IP """AMBIGUOUS_CYRILLIC() => EA_N""" 4
.el .IP "\f(CWAMBIGUOUS_CYRILLIC() => EA_N\fR" 4
.IX Item "AMBIGUOUS_CYRILLIC() => EA_N"
.PD 0
.ie n .IP """AMBIGUOUS_GREEK() => EA_N""" 4
.el .IP "\f(CWAMBIGUOUS_GREEK() => EA_N\fR" 4
.IX Item "AMBIGUOUS_GREEK() => EA_N"
.ie n .IP """AMBIGUOUS_LATIN() => EA_N""" 4
.el .IP "\f(CWAMBIGUOUS_LATIN() => EA_N\fR" 4
.IX Item "AMBIGUOUS_LATIN() => EA_N"
.PD
\&\s-1XX\s0 (A) \s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0 (N) \s-1XXXXXXX\s0
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXUnicode \s-1XXXXXX\s0 (F) \s-1XXXXXXXXXXXXXX\s0 (Na) \s-1XXXXXXXXXXXXXXXX\s0EAWidth \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 \f(CW"EASTASIAN"\fR \s-1XXXXXXXXXXXX\s0
.ie n .IP """QUESTIONABLE_NARROW_SIGNS() => EA_A""" 4
.el .IP "\f(CWQUESTIONABLE_NARROW_SIGNS() => EA_A\fR" 4
.IX Item "QUESTIONABLE_NARROW_SIGNS() => EA_A"
U+00A2 \s-1XXXXXXU+00A3\s0 \s-1XXXXXXU+00A5\s0 \s-1XXX\s0 (\s-1XXXXXX\s0)XU+00A6 \s-1XXXXU+00AC\s0 \s-1XXXU+00AF\s0 \s-1XXXXX\s0
.Sh "\s-1XXXXXX\s0"
.IX Subsection "XXXXXX"
\&\*(L"new\*(R" \s-1XXXXXXX\s0 \*(L"config\*(R" \s-1XXXXXXXXXXXXXXXXXXXXXX\s0 \s-1XXXXXXXXXXXXXX\s0
\&\fIUnicode/LineBreak/Defaults.pm\fRX
\&\s-1XXX\s0 \fIUnicode/LineBreak/Defaults.pm.sample\fR \s-1XXXXXXXX\s0
.SH "BUGS"
.IX Header "BUGS"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1CPAN\s0 Request Tracker:
<http://rt.cpan.org/Public/Dist/Display.html?Name=Unicode\-LineBreak>.
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW$VERSION\fR \s-1XXXXXXXXXXX\s0
.Sh "\s-1XXXXXX\s0"
.IX Subsection "XXXXXX"
.IP "2012.06" 4
.IX Item "2012.06"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
\&\fIeawidth()\fR \s-1XXXXXXXXXX\s0
\&\s-1XXXX\s0 \*(L"columns\*(R" in Unicode::GCString \s-1XXXXXXXXXXX\s0
.IP "\(bu" 4
\&\fIlbclass()\fR \s-1XXXXXXXXXX\s0
\&\*(L"lbc\*(R" in Unicode::GCString X \*(L"lbcext\*(R" in Unicode::GCString
\&\s-1XXXXXXXX\s0
.RE
.RS 4
.RE
.Sh "\s-1XXXXXXX\s0"
.IX Subsection "XXXXXXX"
XXXXXXXXXXXXXXXXXXXXXUnicode \s-1XX\s0 6.3.0XXXXX
.PP
\&\s-1XXXXXXXXXXXXXX\s0 \s-1UAX14\-C2\s0 \s-1XXXXXXXXXXX\s0
.SH "IMPLEMENTATION NOTES"
.IX Header "IMPLEMENTATION NOTES"
.IP "\(bu" 4
\&\s-1XXXXXXXXXXXX\s0 \s-1NS\s0 \s-1XXXXXX\s0 \s-1ID\s0 \s-1XXXXXXXXXXX\s0
.IP "\(bu" 4
\&\s-1XXXXXXXXXXXXXXXXXXX\s0 \s-1ID\s0 \s-1XXXXXX\s0 \s-1AL\s0 \s-1XXXXXXXXXXX\s0
.IP "\(bu" 4
\&\s-1AI\s0 \s-1XXXXXXXXX\s0 \s-1AL\s0 X \s-1ID\s0 \s-1XXXXXXXXXXXXXXX\s0
.IP "\(bu" 4
\&\s-1CB\s0 \s-1XXXXXXXXXXXXXXX\s0
.IP "\(bu" 4
\&\s-1CJ\s0 \s-1XXXXXXXXXXX\s0 \s-1NS\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0
.IP "\(bu" 4
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1SA\s0 \s-1XXXXXXXXX\s0 \s-1AL\s0 \s-1XXXXXX\s0
XXXXGrapheme_Cluster_Break \s-1XXXXX\s0 Extend X SpacingMark \s-1XXXXXX\s0 \s-1CM\s0 \s-1XXXXXX\s0
.IP "\(bu" 4
\&\s-1SG\s0 X \s-1XX\s0 \s-1XXXXXXXXX\s0 \s-1AL\s0 \s-1XXXXXX\s0
.IP "\(bu" 4
\&\s-1XXX\s0 \s-1UCS\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.Sp
.Vb 10
\&    XX               | UAX #14    | UAX #11    | XX
\&    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&    U+20A0..U+20CF     | PR [*1]    | N [*2]     | XXXX
\&    U+3400..U+4DBF     | ID         | W          | CJKXX
\&    U+4E00..U+9FFF     | ID         | W          | CJKXX
\&    U+D800..U+DFFF     | AL (SG)    | N          | XXXXX
\&    U+E000..U+F8FF     | AL (XX)    | F X N (A) | XXXX
\&    U+F900..U+FAFF     | ID         | W          | CJKXX
\&    U+20000..U+2FFFD   | ID         | W          | CJKXX
\&    U+30000..U+3FFFD   | ID         | W          | XXX
\&    U+F0000..U+FFFFD   | AL (XX)    | F X N (A) | XXXX
\&    U+100000..U+10FFFD | AL (XX)    | F X N (A) | XXXX
\&    XXXXXXXX   | AL (XX)    | N          | XXXXXX
\&                       |            |            | XXXXXX
\&    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&    [*1] U+20A7 XXXXX (PO)XU+20B6 XXXXXXXXXXX 
\&      (PO)XU+20BB XXXXXXXXXXXXXXX (PO) XXXX
\&    [*2] U+20A9 XXXXX (H)XU+20AC XXXXX (F X N (A)) X
\&      XXX
.Ve
.IP "\(bu" 4
\&\s-1XXXXXXXXX\s0 MnXMeXCcXCfXZlXZp \s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.SH "REFERENCES"
.IX Header "REFERENCES"
.IP "[\s-1CMOS\s0]" 4
.IX Item "[CMOS]"
\&\fIThe Chicago Manual of Style\fR, 15th edition.
University of Chicago Press, 2003.
.IP "[\s-1JIS\s0 X 4051]" 4
.IX Item "[JIS X 4051]"
\&\s-1JIS\s0 X 4051:2004
\&\fI\s-1XXXXXXXXXX\s0\fR.
\&\s-1XXXXXX\s0, 2004.
.IP "[\s-1JLREQ\s0]" 4
.IX Item "[JLREQ]"
\&\s-1XXXXX\s0.
\&\fI\s-1XXXXXXXXXX\s0\fR, 
W3C \s-1XXXXX\s0 2012X4X3X.
<http://www.w3.org/TR/2012/NOTE\-jlreq\-20120403/ja/>.
.IP "[\s-1UAX\s0 #11]" 4
.IX Item "[UAX #11]"
A. Freytag (ed.) (2008\-2009).
\&\fIUnicode Standard Annex #11: East Asian Width\fR, Revisions 17\-19.
<http://unicode.org/reports/tr11/>.
.IP "[\s-1UAX\s0 #14]" 4
.IX Item "[UAX #14]"
A. Freytag and A. Heninger (eds.) (2008\-2013).
\&\fIUnicode Standard Annex #14: Unicode Line Breaking Algorithm\fR, Revisions 22\-32.
<http://unicode.org/reports/tr14/>.
.IP "[\s-1UAX\s0 #29]" 4
.IX Item "[UAX #29]"
Mark Davis (ed.) (2009\-2013).
\&\fIUnicode Standard Annex #29: Unicode Text Segmentation\fR, Revisions 15\-23.
<http://www.unicode.org/reports/tr29/>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Text::LineFold~[ja],
Text::Wrap,
Unicode::GCString~[ja].
.SH "AUTHOR"
.IX Header "AUTHOR"
Copyright (C) 2009\-2013 Hatuka*nezumi \- \s-1IKEDA\s0 Soji <hatuka(at)nezumi.nu>.
.PP
This program is free software; you can redistribute it and/or modify it 
under the same terms as Perl itself.
