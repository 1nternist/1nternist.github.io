.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "POD2::JA::Text::LineFold 3"
.TH POD2::JA::Text::LineFold 3 "2013-11-20" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Text::LineFold~[ja] \- XXXXXXXXXXXX
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Text::LineFold;
\&    $lf = Text::LineFold\->new();
\&    
\&    # XXXXX
\&    $folded = $lf\->fold($string, \*(AqPLAIN\*(Aq);
\&    $indented = $lf\->fold(\*(Aq \*(Aq x 8, \*(Aq \*(Aq x 4, $string);
\&
\&    # XXXXXX
\&    $unfolded = $lf\->unfold($string, \*(AqFIXED\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Text::LineFold \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXRFC\s0 3676 X flowed \s-1XXXXXXXXX\s0
.Sh "\s-1XXXXXXXXX\s0"
.IX Subsection "XXXXXXXXX"
.IP "new ([\s-1KEY\s0 => \s-1VALUE\s0, ...])" 4
.IX Item "new ([KEY => VALUE, ...])"
\&\fI\s-1XXXXXXX\s0\fRX
\&\s-1KEY\s0 => \s-1VALUE\s0 \s-1XXXXXXX\s0 config \s-1XXXXXXXX\s0
.ie n .IP "$self\->config (\s-1KEY\s0)" 4
.el .IP "\f(CW$self\fR\->config (\s-1KEY\s0)" 4
.IX Item "$self->config (KEY)"
.PD 0
.ie n .IP "$self\->config ([\s-1KEY\s0 => \s-1VAL\s0, ...])" 4
.el .IP "\f(CW$self\fR\->config ([\s-1KEY\s0 => \s-1VAL\s0, ...])" 4
.IX Item "$self->config ([KEY => VAL, ...])"
.PD
\&\fI\s-1XXXXXXXXXX\s0\fRX
\&\s-1XXXXXXXXXXXXXXXX\s0 \s-1KEY\s0 => \s-1VALUE\s0 \s-1XXXXXXXX\s0
.RS 4
.IP "Charset => \s-1CHARSET\s0" 4
.IX Item "Charset => CHARSET"
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXX\s0 MIME::Charset~[ja] \s-1XXXXXXX\s0
\&\s-1XXXX\s0 \f(CW"UTF\-8"\fRX
.IP "Language => \s-1LANGUAGE\s0" 4
.IX Item "Language => LANGUAGE"
Charset \s-1XXXXXXXXXXXX/XXXXXXXXXXXXXXX\s0
\&\s-1XXXX\s0 \f(CW"XX"\fRX
\&\*(L"Context\*(R" in Unicode::LineBreak~[ja] \s-1XXXXXXXXX\s0
.IP "Newline => \s-1STRING\s0" 4
.IX Item "Newline => STRING"
\&\s-1XXXXXXX\s0
\&\s-1XXXX\s0 \f(CW"\en"\fRX
.IP "OutputCharset => \s-1CHARSET\s0" 4
.IX Item "OutputCharset => CHARSET"
\&\fIfold()\fR/\fIunfold()\fR \s-1XXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXX\s0 MIME::Charset~[ja] \s-1XXXXXXX\s0
\&\s-1XXX\s0 \f(CW"_UNICODE_"\fR \s-1XXXXXXXXXX\s0 Unicode \s-1XXXXXXX\s0
\&\s-1XXXX\s0 Charset \s-1XXXXXXXX\s0
.IP "TabSize => \s-1NUMBER\s0" 4
.IX Item "TabSize => NUMBER"
\&\s-1XXXXXXXXXX\s0
0 \s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXX\s0 8X
.IP "BreakIndent" 4
.IX Item "BreakIndent"
.PD 0
.IP "CharMax" 4
.IX Item "CharMax"
.IP "ColMax" 4
.IX Item "ColMax"
.IP "ColMin" 4
.IX Item "ColMin"
.IP "ComplexBreaking" 4
.IX Item "ComplexBreaking"
.IP "EAWidth" 4
.IX Item "EAWidth"
.IP "HangulAsAL" 4
.IX Item "HangulAsAL"
.IP "LBClass" 4
.IX Item "LBClass"
.IP "LegacyCM" 4
.IX Item "LegacyCM"
.IP "Prep" 4
.IX Item "Prep"
.IP "Urgent" 4
.IX Item "Urgent"
.PD
\&\*(L"\s-1XXXXX\s0\*(R" in Unicode::LineBreak~[ja] \s-1XXXX\s0
.RE
.RS 4
.RE
.ie n .IP "$self\->fold (\s-1STRING\s0, [\s-1METHOD\s0])" 4
.el .IP "\f(CW$self\fR\->fold (\s-1STRING\s0, [\s-1METHOD\s0])" 4
.IX Item "$self->fold (STRING, [METHOD])"
.PD 0
.ie n .IP "$self\->fold (\s-1INITIAL_TAB\s0, \s-1SUBSEQUENT_TAB\s0, \s-1STRING\s0, ...)" 4
.el .IP "\f(CW$self\fR\->fold (\s-1INITIAL_TAB\s0, \s-1SUBSEQUENT_TAB\s0, \s-1STRING\s0, ...)" 4
.IX Item "$self->fold (INITIAL_TAB, SUBSEQUENT_TAB, STRING, ...)"
.PD
\&\fI\s-1XXXXXXXXXX\s0\fRX
\&\s-1XXX\s0 \s-1STRING\s0 \s-1XXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXX\s0 Newline \s-1XXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXX\s0 TabSize \s-1XXXXXXXXXXXXXXXXXXXXX\s0
.Sp
\&\s-1XXXXXXXXXXMETHOD\s0 \s-1XXXXXXXXXXXXXXXXXX\s0
.RS 4
.ie n .IP """FIXED""" 4
.el .IP "\f(CW``FIXED''\fR" 4
.IX Item """FIXED"""
\&\f(CW">"\fR \s-1XXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXX\s0
.ie n .IP """FLOWED""" 4
.el .IP "\f(CW``FLOWED''\fR" 4
.IX Item """FLOWED"""
\&\s-1RFC\s0 3676 \s-1XXXXXX\s0 \f(CW"Format=Flowed; DelSp=Yes"\fR \s-1XXX\s0
.ie n .IP """PLAIN""" 4
.el .IP "\f(CW``PLAIN''\fR" 4
.IX Item """PLAIN"""
\&\s-1XXXXXXXXXXXXXXXXXX\s0
.RE
.RS 4
.Sp
\&\s-1XXXXXXXXX\s0\*(L"\fIwrap()\fR\*(R" in Text::Wrap \s-1XXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXX\s0 \s-1INITIAL_TAB\s0 \s-1XXXXXXXXXXX\s0 \s-1SUBSEQUENT_TAB\s0 \s-1XXXXXX\s0
.RE
.ie n .IP "$self\->unfold (\s-1STRING\s0, \s-1METHOD\s0)" 4
.el .IP "\f(CW$self\fR\->unfold (\s-1STRING\s0, \s-1METHOD\s0)" 4
.IX Item "$self->unfold (STRING, METHOD)"
\&\s-1XXX\s0 \s-1STRING\s0 \s-1XXXXXXXXXXXXXXXXXXXXXX\s0
.Sp
\&\s-1METHOD\s0 \s-1XXXXXXXXXXXXXXXXXXX\s0
.RS 4
.ie n .IP """FIXED""" 4
.el .IP "\f(CW``FIXED''\fR" 4
.IX Item """FIXED"""
\&\s-1XXXXXX\s0
\&\f(CW">"\fR \s-1XXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXX\s0
.ie n .IP """FLOWED""" 4
.el .IP "\f(CW``FLOWED''\fR" 4
.IX Item """FLOWED"""
\&\s-1RFC\s0 3676 \s-1XXXXXX\s0 \f(CW"Format=Flowed; DelSp=Yes"\fR \s-1XXXXXXXXX\s0
.ie n .IP """FLOWEDSP""" 4
.el .IP "\f(CW``FLOWEDSP''\fR" 4
.IX Item """FLOWEDSP"""
\&\s-1RFC\s0 3676 \s-1XXXXXX\s0 \f(CW"Format=Flowed; DelSp=No"\fR \s-1XXXXXXXXX\s0
.RE
.RS 4
.RE
.SH "BUGS"
.IX Header "BUGS"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1CPAN\s0 Request Tracker:
<http://rt.cpan.org/Public/Dist/Display.html?Name=Unicode\-LineBreak>.
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW$VERSION\fR \s-1XXXXXXXXX\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Unicode::LineBreak~[ja],
Text::Wrap.
.SH "AUTHOR"
.IX Header "AUTHOR"
Copyright (C) 2009\-2012 Hatuka*nezumi \- \s-1IKEDA\s0 Soji <hatuka(at)nezumi.nu>.
.PP
This program is free software; you can redistribute it and/or modify it 
under the same terms as Perl itself.
