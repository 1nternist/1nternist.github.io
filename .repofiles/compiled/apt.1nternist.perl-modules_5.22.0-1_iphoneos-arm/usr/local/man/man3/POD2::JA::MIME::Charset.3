.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "POD2::JA::MIME::Charset 3"
.TH POD2::JA::MIME::Charset 3 "2013-10-28" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MIME::Charset~[ja] \- MIME XXXXXXXXXXXXXX
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use MIME::Charset:
\&
\&    $charset = MIME::Charset\->new("euc\-jp");
.Ve
.PP
\&\s-1XXXXXXXXXXXXX:\s0
.PP
.Vb 4
\&    $benc = $charset\->body_encoding; # X "Q"
\&    $cset = $charset\->as_string; # X "US\-ASCII"
\&    $henc = $charset\->header_encoding; # X "S"
\&    $cset = $charset\->output_charset; # X "ISO\-2022\-JP"
.Ve
.PP
\&\s-1XXXXXXXXXX:\s0
.PP
.Vb 6
\&    ($text, $charset, $encoding) =
\&        $charset\->header_encode(
\&           "\exc9\exc2\exc5\exaa\exc0\exde\exc3\exef\exc5\exaa".
\&           "\exc7\exd1\exca\exaa\exbd\exd0\exce\excf\exb4\exef",
\&           Charset => \*(Aqeuc\-jp\*(Aq);
\&    # ...XXX (<XXXXXXX>, "ISO\-2022\-JP", "B") XXXX
\&
\&    ($text, $charset, $encoding) =
\&        $charset\->body_encode(
\&            "Collectioneur path\exe9tiquement ",
\&            Charset => \*(Aqlatin1\*(Aq);
\&    # ...XXX (<XXXXX>, "ISO\-8859\-1", "QUOTED\-PRINTABLE") XXXX
\&
\&    $len = $charset\->encoded_header_len(
\&        "Perl\exe8\exa8\ex80\exe8\exaa\ex9e",
\&        Charset => "utf\-8",
\&        Encoding => "b");
\&    # ...XXX 28 XXXX
.Ve
.PP
\&\s-1XXXXXXXXXXX:\s0
.PP
.Vb 3
\&    MIME::Charset::alias("csEUCKR", "euc\-kr");
\&    MIME::Charset::default("iso\-8859\-1");
\&    MIME::Charset::fallback("us\-ascii");
.Ve
.PP
\&\s-1XOOXX\s0 (\s-1XXXXXXX\s0):
.PP
.Vb 1
\&    use MIME::Charset qw(:info);
\&
\&    $benc = body_encoding("iso\-8859\-2"); # "Q"
\&    $cset = canonical_charset("ANSI X3.4\-1968"); # "US\-ASCII"
\&    $henc = header_encoding("utf\-8"); # "S"
\&    $cset = output_charset("shift_jis"); # "ISO\-2022\-JP"
\&
\&    use MIME::Charset qw(:trans);
\&
\&    ($text, $charset, $encoding) =
\&        header_encode(
\&           "\exc9\exc2\exc5\exaa\exc0\exde\exc3\exef\exc5\exaa".
\&           "\exc7\exd1\exca\exaa\exbd\exd0\exce\excf\exb4\exef",
\&           "euc\-jp");
\&    # ...(<XXXXXXXXX>, "ISO\-2022\-JP", "B") XXXX
\&
\&    ($text, $charset, $encoding) =
\&        body_encode(
\&            "Collectioneur path\exe9tiquement ".
\&            "\exe9clectique de d\exe9chets",
\&            "latin1");
\&    # ...(<XXXXXX>, "ISO\-8859\-1", "QUOTED\-PRINTABLE") XXXX
\&
\&    $len = encoded_header_len(
\&        "Perl\exe8\exa8\ex80\exe8\exaa\ex9e", "b", "utf\-8"); # 28
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
MIME::Charset \s-1XXXXXXXXXXXX\s0 \s-1MIME\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.Sh "\s-1XX\s0"
.IX Subsection "XX"
\&\fB\s-1XXXXXXXX\s0\fR \s-1XXXMIME\s0 \s-1XX\s0 ``character set'' \s-1XXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXISO/IEC\s0 \s-1XXXX\s0 ``\s-1XXXXXXX\s0'' (\s-1CCS\s0) X
``\s-1XXXXXX\s0'' (\s-1CES\s0) \s-1XXXXXXXXXXXX\s0
.PP
\&\fB\s-1XXXXXXXX\s0\fR \s-1XXXMIME\s0 \s-1XXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0
US-ASCII \s-1XXXXXXXXXXXXXXXXX\s0
.Sh "\s-1XXXXXXX\s0"
.IX Subsection "XXXXXXX"
.ie n .IP "$charset = MIME::Charset\->new([\s-1CHARSET\s0 [, \s-1OPTS\s0]])" 4
.el .IP "\f(CW$charset\fR = MIME::Charset\->new([\s-1CHARSET\s0 [, \s-1OPTS\s0]])" 4
.IX Item "$charset = MIME::Charset->new([CHARSET [, OPTS]])"
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
.Sp
\&\s-1OPTS\s0 \s-1XXXXXXXXXXXX\s0
\&\fB\s-1NOTE\s0\fR:
Unicode/XXXXXXXXXXXXXXXXXXXX (\*(L"\s-1USE_ENCODE\s0\*(R" \s-1XX\s0) \s-1XX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.RS 4
.IP "Mapping => \s-1MAPTYPE\s0" 4
.IX Item "Mapping => MAPTYPE"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\f(CW"EXTENDED"\fR \s-1XXXXXXXXXXXX\s0
\&\f(CW"STANDARD"\fR \s-1XXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXX\s0 \f(CW"EXTENDED"\fRX
.RE
.RS 4
.RE
.Sh "\s-1XXXXXXXXXXXXX\s0"
.IX Subsection "XXXXXXXXXXXXX"
.ie n .IP "$charset\->body_encoding" 4
.el .IP "\f(CW$charset\fR\->body_encoding" 4
.IX Item "$charset->body_encoding"
.PD 0
.IP "body_encoding \s-1CHARSET\s0" 4
.IX Item "body_encoding CHARSET"
.PD
\&\s-1CHARSET\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.Sp
\&\s-1XXX\s0 \f(CW"B"\fR (\s-1BASE64\s0)X\f(CW"Q"\fR (\s-1QUOTED\-PRINTABLE\s0)X\f(CW"S"\fR (\s-1XXXXXXXX\s0)X
\&\f(CW\*(C`undef\*(C'\fR (\s-1XXXXXXXXXXXXX\s0 \-\-\- 7BIT X 8BIT)
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.ie n .IP "$charset\->as_string" 4
.el .IP "\f(CW$charset\fR\->as_string" 4
.IX Item "$charset->as_string"
.PD 0
.IP "canonical_charset \s-1CHARSET\s0" 4
.IX Item "canonical_charset CHARSET"
.PD
\&\s-1XXXXXXXXXXXXXXXXXXXX\s0
.ie n .IP "$charset\->decoder" 4
.el .IP "\f(CW$charset\fR\->decoder" 4
.IX Item "$charset->decoder"
\&\s-1XXXXXXXXX\s0 Unicode \s-1XXXXXXXXX\s0
\&\*(L"Encode::Encoding\*(R" \s-1XXXXXXXXXX\s0
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXundef \s-1XXXXX\s0
.ie n .IP "$charset\->dup" 4
.el .IP "\f(CW$charset\fR\->dup" 4
.IX Item "$charset->dup"
\&\s-1XXXXXXXXXXXXXXXXXXXX\s0
.ie n .IP "$charset\->encoder([\s-1CHARSET\s0])" 4
.el .IP "\f(CW$charset\fR\->encoder([\s-1CHARSET\s0])" 4
.IX Item "$charset->encoder([CHARSET])"
\&\s-1XXXXXXXXX\s0 \s-1MIME\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\*(L"Encode::Encoding\*(R" \s-1XXXXXXXXXX\s0
.Sp
\&\s-1CHARSET\s0 XXXXXXXXXX$charset \s-1XXXXXXXXXXX\s0
(\s-1XXXXXXXXXXXXXX\s0) \s-1XXCHARSET\s0 \s-1XXXXXXXXXX\s0
XXXX$charset \s-1XXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1CHARSET\s0 \s-1XXXXXXXXX\s0
.ie n .IP "$charset\->header_encoding" 4
.el .IP "\f(CW$charset\fR\->header_encoding" 4
.IX Item "$charset->header_encoding"
.PD 0
.IP "header_encoding \s-1CHARSET\s0" 4
.IX Item "header_encoding CHARSET"
.PD
\&\s-1CHARSET\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.Sp
\&\s-1XXX\s0 \f(CW"B"\fRX\f(CW"Q"\fRX\f(CW"S"\fR (\s-1XXXXXXXXXX\s0)X
\&\f(CW\*(C`undef\*(C'\fR (\s-1XXXXXXXXXXX\s0)
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.ie n .IP "$charset\->output_charset" 4
.el .IP "\f(CW$charset\fR\->output_charset" 4
.IX Item "$charset->output_charset"
.PD 0
.IP "output_charset \s-1CHARSET\s0" 4
.IX Item "output_charset CHARSET"
.PD
\&\s-1XXXX\s0 \s-1CHARSET\s0 \s-1XXXXXXXXXXXXXX\s0
\&\s-1MIME\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0
(\s-1XXXXXXXXXXXXX\s0) \s-1XXXXX\s0
.Sp
Unicode/XXXXXXXXXXXXXXXXXXXX (\*(L"\s-1USE_ENCODE\s0\*(R" \s-1XX\s0) \s-1XX\s0
\&\s-1XXXXXXX\s0 \*(L"canonical_charset\*(R" \s-1XXXXXXX\s0
.Sh "\s-1XXXXXXXXXX\s0"
.IX Subsection "XXXXXXXXXX"
.ie n .IP "$charset\->body_encode(\s-1STRING\s0 [, \s-1OPTS\s0])" 4
.el .IP "\f(CW$charset\fR\->body_encode(\s-1STRING\s0 [, \s-1OPTS\s0])" 4
.IX Item "$charset->body_encode(STRING [, OPTS])"
.PD 0
.IP "body_encode \s-1STRING\s0, \s-1CHARSET\s0 [, \s-1OPTS\s0]" 4
.IX Item "body_encode STRING, CHARSET [, OPTS]"
.PD
\&\s-1STRING\s0 X (\s-1XXXX\s0) \s-1XXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1CHARSET\s0 X \s-1STRING\s0 \s-1XXXXXXXXXXXXXXXXX\s0
.Sp
\&\s-1OPTS\s0 \s-1XXXXXXXXXXXXX\s0
\&\fB\s-1NOTE\s0\fR:
Unicode/XXXXXXXXXXXXXXXXXXXX (\*(L"\s-1USE_ENCODE\s0\*(R" \s-1XX\s0) \s-1XX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.RS 4
.IP "Detect7bit => \s-1YESNO\s0" 4
.IX Item "Detect7bit => YESNO"
\&\s-1CHARSET\s0 \s-1XXXXXX7XXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXX\s0 \f(CW"YES"\fRX
.IP "Replacement => \s-1REPLACEMENT\s0" 4
.IX Item "Replacement => REPLACEMENT"
\&\s-1XXXXXXXXXX\s0\*(L"\s-1XXXXX\s0\*(R" \s-1XXX\s0
.RE
.RS 4
.Sp
3XXXXXX (\fI\s-1XXXXXXXX\s0\fR, \fI\s-1XXXXXXXXXXX\s0\fR,
\&\fI\s-1XXXXXXXXXX\s0\fR) \s-1XXXX\s0
\&\fI\s-1XXXXXXXXXX\s0\fR X \f(CW"BASE64"\fRX\f(CW"QUOTED\-PRINTABLE"\fRX
\&\f(CW"7BIT"\fRX\f(CW"8BIT"\fR \s-1XXXXXX\s0\fI\s-1XXXXXXXXXXX\s0\fR \s-1XXXXXXX\s0
\&\fI\s-1XXXXXXXX\s0\fR X \s-1ASCIIXXXXXXXXXXXXX\s0
\&\fI\s-1XXXXXXXXXXX\s0\fR X \f(CW\*(C`undef\*(C'\fRX\fI\s-1XXXXXXXXXX\s0\fR X \f(CW"BASE64"\fR
\&\s-1XXXX\s0
\&\fI\s-1XXXXXXXXXXX\s0\fR X \f(CW"US\-ASCII"\fR
\&\s-1XXXXXXXXXX\s0 \s-1ASCIIXXXXXXXXXXXXXXXXX\s0
.RE
.ie n .IP "$charset\->decode(\s-1STRING\s0 [,CHECK])" 4
.el .IP "\f(CW$charset\fR\->decode(\s-1STRING\s0 [,CHECK])" 4
.IX Item "$charset->decode(STRING [,CHECK])"
\&\s-1STRING\s0 X Unicode \s-1XXXXXXXXX\s0
.Sp
\&\fB\s-1NOTE\s0\fR:
Unicode/XXXXXXXXXXXXXXXXXXXX (\*(L"\s-1USE_ENCODE\s0\*(R" \s-1XX\s0) \s-1XX\s0
\&\s-1XXXXXXXXXXXXX\s0
.IP "detect_7bit_charset \s-1STRING\s0" 4
.IX Item "detect_7bit_charset STRING"
\&\s-1XXX\s0 \s-1STRING\s0 \s-1XXXXXXXX7\s0 \s-1XXXXXXXXXXXXXXXXX\s0
\&\s-1STRING\s0 X8XXXXXXXXXXXXX \f(CW\*(C`undef\*(C'\fR \s-1XXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.ie n .IP "$charset\->encode(\s-1STRING\s0 [, \s-1CHECK\s0])" 4
.el .IP "\f(CW$charset\fR\->encode(\s-1STRING\s0 [, \s-1CHECK\s0])" 4
.IX Item "$charset->encode(STRING [, CHECK])"
\&\s-1STRING\s0 (Unicode \s-1XXXXXXXXXXXX\s0) \s-1XX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1MIME\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
(\s-1XXXXXXXXXXXXX\s0) \s-1XXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXX\s0 Unicode \s-1XXXXXXXXXXXXXXXXXX\s0
.Sp
\&\fB\s-1NOTE\s0\fR:
Unicode/XXXXXXXXXXXXXXXXXXXX (\*(L"\s-1USE_ENCODE\s0\*(R" \s-1XX\s0) \s-1XX\s0
\&\s-1XXXXXXXXXXXXX\s0
.ie n .IP "$charset\->encoded_header_len(\s-1STRING\s0 [, \s-1ENCODING\s0])" 4
.el .IP "\f(CW$charset\fR\->encoded_header_len(\s-1STRING\s0 [, \s-1ENCODING\s0])" 4
.IX Item "$charset->encoded_header_len(STRING [, ENCODING])"
.PD 0
.IP "encoded_header_len \s-1STRING\s0, \s-1ENCODING\s0, \s-1CHARSET\s0" 4
.IX Item "encoded_header_len STRING, ENCODING, CHARSET"
.PD
\&\s-1STRING\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0
(\s-1XXXXXXXXXX\s0) \s-1XXXXXX\s0
.Sp
\&\s-1ENCODING\s0 X \f(CW"B"\fRX\f(CW"Q"\fRX\f(CW"S"\fR
(\f(CW"B"\fR X \f(CW"Q"\fR \s-1XXXXXXXXX\s0) \s-1XXXXXX\s0
.ie n .IP "$charset\->header_encode(\s-1STRING\s0 [, \s-1OPTS\s0])" 4
.el .IP "\f(CW$charset\fR\->header_encode(\s-1STRING\s0 [, \s-1OPTS\s0])" 4
.IX Item "$charset->header_encode(STRING [, OPTS])"
.PD 0
.IP "header_encode \s-1STRING\s0, \s-1CHARSET\s0 [, \s-1OPTS\s0]" 4
.IX Item "header_encode STRING, CHARSET [, OPTS]"
.PD
\&\s-1STRING\s0 X (\s-1XXXX\s0) \s-1XXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1CHARSET\s0 X \s-1STRING\s0 \s-1XXXXXXXXXXXXXXXXX\s0
.Sp
\&\s-1OPTS\s0 \s-1XXXXXXXXXXXXX\s0
\&\fB\s-1NOTE\s0\fR:
Unicode/XXXXXXXXXXXXXXXXXXXX (\*(L"\s-1USE_ENCODE\s0\*(R" \s-1XX\s0) \s-1XX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.RS 4
.IP "Detect7bit => \s-1YESNO\s0" 4
.IX Item "Detect7bit => YESNO"
\&\s-1CHARSET\s0 \s-1XXXXXX7XXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXX\s0 \f(CW"YES"\fRX
.IP "Replacement => \s-1REPLACEMENT\s0" 4
.IX Item "Replacement => REPLACEMENT"
\&\s-1XXXXXXXXXX\s0\*(L"\s-1XXXXX\s0\*(R" \s-1XXX\s0
.RE
.RS 4
.Sp
3XXXXXX (\fI\s-1XXXXXXXX\s0\fR, \fI\s-1XXXXXXXXXXX\s0\fR,
\&\fI\s-1XXXXXXXXX\s0\fR) \s-1XXXX\s0
\&\fI\s-1XXXXXXXXX\s0\fR X \f(CW"B"\fRX\f(CW"Q"\fRX\f(CW\*(C`undef\*(C'\fR (\s-1XXXXXXXXXXX\s0)
\&\s-1XXXXXX\s0
\&\fI\s-1XXXXXXXXXXX\s0\fR \s-1XXXXXXX\s0\fI\s-1XXXXXXXX\s0\fR
X \s-1ASCIIXXXXXXXXXXXXX\s0\fI\s-1XXXXXXXXXXX\s0\fR X \f(CW"8BIT"\fR
(\s-1XXXXXXXXXXXXXXXX\s0\fI\s-1XX\s0\fR\s-1XXXXXXXXXXXXXXXXXX\s0)
X \fI\s-1XXXXXXXXX\s0\fR X \f(CW\*(C`undef\*(C'\fR (\s-1XXXXXXXXXXXXX\s0) \s-1XXXX\s0
\&\fI\s-1XXXXXXXXXXX\s0\fR X \f(CW"US\-ASCII"\fR
\&\s-1XXXXXXXXXX\s0 \s-1ASCIIXXXXXXXXXXXXXXXXX\s0
.RE
.ie n .IP "$charset\->undecode(\s-1STRING\s0 [,CHECK])" 4
.el .IP "\f(CW$charset\fR\->undecode(\s-1STRING\s0 [,CHECK])" 4
.IX Item "$charset->undecode(STRING [,CHECK])"
Unicode \s-1XXX\s0 string \s-1XX\s0
\&\f(CW$charset\fR \s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXX\s0 \f(CW\*(C`$charset\->decoder\->encode()\*(C'\fR \s-1XXXXXXX\s0
.Sp
\&\fB\s-1NOTE\s0\fR:
Unicode/XXXXXXXXXXXXXXXXXXXX (\*(L"\s-1USE_ENCODE\s0\*(R" \s-1XX\s0) \s-1XX\s0
\&\s-1XXXXXXXXXXXXX\s0
.Sh "\s-1XXXXXXXXXXX\s0"
.IX Subsection "XXXXXXXXXXX"
.IP "alias \s-1ALIAS\s0 [, \s-1CHARSET\s0]" 4
.IX Item "alias ALIAS [, CHARSET]"
\&\*(L"canonical_charset\*(R" \s-1XXXXXXXXXXXXXXXXXXXXXXXXXX/XXXXX\s0
.Sp
\&\s-1CHARSET\s0 \s-1XXXXXXXXXXXALIAS\s0 X \s-1CHARSET\s0 \s-1XXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XX\s0 \s-1ALIAS\s0 \s-1XXXXXXXXXXXXXXXXXXXX\s0
.IP "default [\s-1CHARSET\s0]" 4
.IX Item "default [CHARSET]"
\&\s-1XXXXXXXXXXXXX/XXXXX\s0
.Sp
\&\fB\s-1XXXXXXXXXX\s0\fR\s-1XXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXX\s0 \f(CW"US\-ASCII"\fRX
.Sp
\&\s-1CHARSET\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXX\s0
.Sp
\&\fB\s-1NOTE\s0\fR: \s-1XXXXXXXXXXXXXXX\s0\fI\s-1XXXXXX\s0\fRX
.IP "fallback [\s-1CHARSET\s0]" 4
.IX Item "fallback [CHARSET]"
\&\s-1XXXXXXXXXXXXX/XXXXX\s0
.Sp
\&\fB\s-1XXXXXXXXXX\s0\fR\s-1XXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXX\s0 \f(CW"FALLBACK"\fR \s-1XXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXX\s0 \f(CW"UTF\-8"\fRX
.Sp
\&\s-1CHARSET\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1CHARSET\s0 X \f(CW"NONE"\fR \s-1XXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXX\s0
.Sp
\&\fB\s-1NOTE\s0\fR: \s-1XXXXXXXXXXX\s0 \f(CW"US\-ASCII"\fR \s-1XXXXXXXX\s0\fI\s-1XX\s0\fRX
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.IP "recommended \s-1CHARSET\s0 [, \s-1HEADERENC\s0, \s-1BODYENC\s0 [, \s-1ENCCHARSET\s0]]" 4
.IX Item "recommended CHARSET [, HEADERENC, BODYENC [, ENCCHARSET]]"
\&\s-1XXXXXXXXXXXXXX/XXXXX\s0
.Sp
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXX\s0 \s-1CHARSET\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXCHARSET\s0 \s-1XXXXXXX\s0 3 \s-1XXXXXX\s0
(\s-1HEADERENC\s0, \s-1BODYENC\s0, \s-1ENCCHARSET\s0) \s-1XXXXXX\s0
.Sp
\&\s-1HEADERENC\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\f(CW"B"\fRX\f(CW"Q"\fRX\f(CW"S"\fR (\s-1XXXXXXXXXX\s0)X
\&\f(CW\*(C`undef\*(C'\fR (\s-1XXXXXXXXXXX\s0) \s-1XXXXXXX\s0
.Sp
\&\s-1BODYENC\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\f(CW"B"\fRX\f(CW"Q"\fRX\f(CW"S"\fR (\s-1XXXXXXXXXX\s0)X\f(CW\*(C`undef\*(C'\fR (\s-1XXXXXXXXXXXXX\s0) \s-1XXXXXXX\s0
.Sp
\&\s-1ENCCHARSET\s0 \s-1XXXXXX\s0 \s-1CHARSET\s0 \s-1XXXXXXXXXXXXXX\s0
\&\s-1MIME\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXX\s0 (\s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0) \s-1XXXX\s0
\&\s-1ENCCHARSET\s0 X \f(CW\*(C`undef\*(C'\fRX
.Sp
\&\fB\s-1NOTE\s0\fR: \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
(\s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0)X
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\*(L"header_encoding\*(R"X\*(L"body_encoding\*(R"X\*(L"output_charset\*(R" \s-1XXXXXXXX\s0
.Sh "\s-1XX\s0"
.IX Subsection "XX"
.IP "\s-1USE_ENCODE\s0" 4
.IX Item "USE_ENCODE"
Unicode/XXXXXXXXXXXX
Unicode \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXX\s0 Perl 5.7.3 \s-1XXXXXXXXXXXXXXX\s0 Perl \s-1XXXXXXXX\s0
.Sh "\s-1XXXXX\s0"
.IX Subsection "XXXXX"
\&\*(L"body_encode\*(R" X \*(L"header_encode\*(R" X
\&\f(CW\*(C`Replacement\*(C'\fR \s-1XXXXXXXXXXXXXXXXXX:\s0
.ie n .IP """DEFAULT""" 4
.el .IP "\f(CW``DEFAULT''\fR" 4
.IX Item """DEFAULT"""
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1UCM\s0 \s-1XXXXXXXXXXXXXXXXXXXXX\s0 <subchar> \s-1XXXXXXXXX\s0
.ie n .IP """FALLBACK""" 4
.el .IP "\f(CW``FALLBACK''\fR" 4
.IX Item """FALLBACK"""
\&\fI\s-1XXXXXXXXXX\s0\fR \s-1XXXX\s0 \f(CW"DEFAULT"\fR \s-1XXXXXXXX\s0
(\*(L"fallback\*(R" \s-1XX\s0)X
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXX\s0
.ie n .IP """CROAK""" 4
.el .IP "\f(CW``CROAK''\fR" 4
.IX Item """CROAK"""
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
eval{} \s-1XXXXXXXXXXXXXXXXXXXXX\s0
\&\f(CW"STRICT"\fR \s-1XXXXX\s0
.ie n .IP """PERLQQ""" 4
.el .IP "\f(CW``PERLQQ''\fR" 4
.IX Item """PERLQQ"""
.PD 0
.ie n .IP """HTMLCREF""" 4
.el .IP "\f(CW``HTMLCREF''\fR" 4
.IX Item """HTMLCREF"""
.ie n .IP """XMLCREF""" 4
.el .IP "\f(CW``XMLCREF''\fR" 4
.IX Item """XMLCREF"""
.PD
Encode \s-1XXXXXXXXXXXX\s0
\&\f(CW\*(C`FB_PERLQQ\*(C'\fRX\f(CW\*(C`FB_HTMLCREF\*(C'\fRX\f(CW\*(C`FB_XMLCREF\*(C'\fR
\&\s-1XXXXXXX\s0
.IP "\s-1XX\s0" 4
.IX Item "XX"
\&\s-1XXXXXXXXXXXXXX\s0
\&\s-1XXX\s0 \*(L"Handling Malformed Data\*(R" in Encode \s-1XXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\f(CW"DEFAULT"\fR \s-1XXXXX\s0
.Sh "\s-1XXXXXX\s0"
.IX Subsection "XXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0
\&\fIMIME/Charset/Defaults.pm\fR \s-1XXXXXXXXXXXX\s0
\&\s-1XXXX\s0 \fIMIME/Charset/Defaults.pm.sample\fR \s-1XXXXXXXX\s0
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW$VERSION\fR \s-1XXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXX\s0
<http://hatuka.nezumi.nu/repos/MIME\-Charset/> \s-1XXXX\s0
.Sh "\s-1XXXXXX\s0"
.IX Subsection "XXXXXX"
.IP "1.001" 4
.IX Item "1.001"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
\&\fInew()\fR \s-1XXXXX\s0 \s-1CHARSET\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.RE
.RS 4
.RE
.IP "1.005" 4
.IX Item "1.005"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
encoded-word \s-1XXXXXXXXX\s0 \s-1RFC\s0 2047 X 5 (3) \s-1XXXXXXXXX\s0
\&\fIencoded_header_len()\fR \s-1XXXXXXXXXXXX\s0
.RE
.RS 4
.RE
.IP "1.008.2" 4
.IX Item "1.008.2"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
\&\fIbody_encoding()\fR \s-1XXXXX\s0 \f(CW"S"\fR \s-1XXXXXXXXXXX\s0
.IP "\(bu" 4
\&\fIbody_encode()\fR \s-1XXXXX\s0 \s-1UTF\-8\s0 \s-1XXXXXXXXXXXXXXXXXXX\s0
\&\s-1XXXXXXXXXXX\s0 \f(CW"BASE64"\fR \s-1XXXXXXXX\s0\f(CW"QUOTED\-PRINTABLE"\fR \s-1XXXXXXXXX\s0
.RE
.RS 4
.RE
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Multipurpose Internet Mail Extensions (\s-1MIME\s0).
.SH "AUTHOR"
.IX Header "AUTHOR"
Hatuka*nezumi \- \s-1IKEDA\s0 Soji <hatuka(at)nezumi.nu>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2006\-2013 Hatuka*nezumi \- \s-1IKEDA\s0 Soji.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
