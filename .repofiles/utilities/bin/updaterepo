#!/bin/bash

REPO="/var/mobile/Developer/Github/1nternist.github.io"
LOGD=$REPO/log
BUILDLOG=$LOGD/buildlog.log
SCANLOG=$LOGD/scanlog.log
SIGNLOG=$LOGD/signlog.log
SYNCLOG=$LOGD/git-sync.log
UTILS="$REPO/.repofiles/utilities/bin"
BUILD="$REPO/.repofiles/uncompiled-packages"
ARCHIVE="$REPO/.repofiles/compiled-packages"
DATE=$(date '+%m-%d-%Y %H:%M:%S')
export PATH="$UTILS:$PATH"

function compilepkgs () {
rm -rf $LOGD/*.log
sudo chown -R root $BUILD
sudo chmod 755 $BUILD
sudo chmod 777 $REPO/debs
echo "Building packages..."
for PkgDir in `ls $BUILD 2> $BUILDLOG`; do
  sudo dpkg-deb -b $BUILD/"${PkgDir%%/}" $REPO/debs/"${PkgDir%%/}".deb &>> $BUILDLOG
done
sleep 1
sudo mv -f $BUILD/* $ARCHIVE 2>> $BUILDLOG
wait
sudo chown -R mobile $ARCHIVE
sudo chown -R mobile $BUILD
sudo chown -R mobile debs
chmod 777 debs
sudo chown -R mobile $LOGD
}

function scanpkgs () {
echo "Scanning packages..."
rm -rf "Packages.gz" "Packages.bz2" "Packages"
scanpkg="$UTILS/dpkg-scanpackages"
$scanpkg -m debs /dev/null > Packages
#sed -i 'Packages' "s#Filename: debs//#Filename: debs/#g"
bzip2 -zkf < Packages > Packages.bz2
gzip -f < Packages > Packages.gz
}

function signpkgs () {
echo "Signing Release with gpg..."
rm -rf Release
rm -rf Release.gpg
cp Release-Template Release
echo " `md5sum Packages | cut -d ' ' -f1` `stat --format=%s Packages` Packages" >> Release
echo " `md5sum Packages.bz2 | cut -d ' ' -f1` `stat --format=%s Packages.bz2` Packages.bz2" >> Release
echo " `md5sum Packages.gz | cut -d ' ' -f1` `stat --format=%s Packages.gz` Packages.gz" >> Release
echo "SHA1:" >> Release
echo " `sha1sum Packages | cut -d ' ' -f1` `stat --format=%s Packages` Packages" >> Release
echo " `sha1sum Packages.bz2 | cut -d ' ' -f1` `stat --format=%s Packages.bz2` Packages.bz2" >> Release
echo " `sha1sum Packages.gz | cut -d ' ' -f1` `stat --format=%s Packages.gz` Packages.gz" >> Release
echo "SHA256:" >> Release
echo " `sha256sum Packages | cut -d ' ' -f1` `stat --format=%s Packages` Packages" >> Release
echo " `sha256sum Packages.bz2 | cut -d ' ' -f1` `stat --format=%s Packages.bz2` Packages.bz2" >> Release
echo " `sha256sum Packages.gz | cut -d ' ' -f1` `stat --format=%s Packages.gz` Packages.gz" >> Release
gpg --passphrase-file /usr/share/keyrings/passwd/github --batch -abs -u dc1nternist -o Release.gpg Release
}

function pushupdate () {
echo "Pushing changes to Github..."
git status &> $SYNCLOG
wait
git add . &>> $SYNCLOG
wait
git status &>> $SYNCLOG
wait
git commit -m "Package update $DATE" &>> $SYNCLOG
wait
git push origin master &>> $SYNCLOG
}

compilepkgs
wait
scanpkgs 2> "$SCANLOG"
wait
signpkgs 2> "$SIGNLOG"
wait
read -p "Push repo updates to GitHub? (y/n) " push2git
if [ "$push2git" = "y" ]; then
	pushupdate
elif [ "$push2git" = "n" ]; then
	echo "##################################"
	echo "#  Repository has been updated.  #"
	echo "#      Updates NOT pushed to     #"
	echo "# 	    GitHub.	       #"
	echo "##################################"
	exit 0
fi


echo "##################################"
echo "#  Repository has been updated.  #"
echo "#      Please open Cydia and     #" 
echo "#      refresh your sources.     #"
echo "##################################"
