#!/bin/bash

[ `id -u` != 0 ] && exec echo "Oops, you need to be root to run this script"

if [ -z "$1" ]; then
echo
echo "ap2ipa ~brc0703"
echo
echo "Usage: ap2ipa [ option | AppFolder.app ]"
echo "[ -l ]	lists all App Folders"
echo "[ *.app ] creates ipa and places in /var/mobile/Documents/ap2ipa"
echo "Note: folders with spaces in name needs to be quoted"
echo
echo
sleep 3
echo "converts system applications to user applications to be installed through IPA Installer and then can be synced to your itunes for easy saving"
echo "only supports /Applications that only need mobile permissions.. like soundboards"
echo
exit 0
fi

if [ "$1" = "-l" ]; then
echo "`ls /Applications/`"
exit 0
fi

if [ -d /Applications/"$1" ]; then
cd /Applications/"$1"
SOURCE=`pwd`
dmp=/dev/null
WORK_DIR=/tmp/ap2ipa
WORK_LOAD=$WORK_DIR/Payload &>$dmp
mkdir -p "$WORK_LOAD" &>$dmp

cd "$WORK_DIR"
echo "creating work directories"
cp -r -a "$SOURCE" "$WORK_LOAD" &>$dmp
echo "copying $1 to work dir"
if [ ! -d "$WORK_LOAD/$1" ]; then
echo "error copying to work dir"
exit 0
fi

INFO=$(echo "$WORK_LOAD/$1/Info.plist")
ICON=`plutil -key CFBundleIconFile "$INFO" 2>$dmp`
if [ -z "$ICON" ]; then
ICON=$(plutil -key CFBundleIconFiles "$INFO" | sed 's/[",()]//g' | grep -i [a-z] | head -1)
fi
if [ -z "$ICON" ]; then
ICON=Icon.png
fi

cp "$WORK_LOAD/$1/$ICON" -T "$WORK_DIR/iTunesArtwork" &>$dmp
key=`plutil -key CFBundleIdentifier "$INFO"`
if [ -n "$key" ]; then
FUCKIT=`echo "$key.ap2ipa"`
plutil -key CFBundleIdentifier -value "$FUCKIT" "$INFO" &>$dmp
else
echo "error writing bundle id"
fi
echo "preparing pacakge for compression"
TAR=/var/mobile/Documents/ap2ipa
echo "creating $1.ipa"
zip -r "$1".ipa Payload iTunesArtwork &>$dmp
mv -f "$1".ipa "$TAR" &>$dmp
mv -f iTunesArtwork -T "$TAR/$1.ipa.png" &>$dmp
echo "moving ipa to $TAR"
echo "cleaning up"
cd $HOME
rm -rf "$WORK_DIR"

if [ -e "$TAR/$1".ipa ]; then
	read -p "launch IPA Installer? y/n: " choice
		if [ "$choice" = "y" ]; then
			exec sbopenurl ipa-installer://
		fi
	if [ "$choice" = "n" ]; then
		echo "Alright your app is there waiting"
	fi
fi
	else
		echo "$1 does not exist in System Applications"
fi

exit 0
